; прямоугольная цифровая поменять местами соседние строки (1 и 2, 3 и 4 и т. д.)
; если строк четное, то соседние, если строк нечетное, то соседние, как при четном,
; и последняя без смены.

STKS SEGMENT PARA STACK 'STACK'		; сегмент стека
    DB 100 DUP (0)					;  
STKS ENDS

; Сегмент данных
DATAS SEGMENT PARA 'DATA'	; сегмент данных
    ROWSMSG DB 'Input the number of rows: $'		; Сообщение при вводе кол-ва строк
	COLSMSG DB 'Input the number of columns: $'		; Сообщение при вводе кол-ва столбцов
	MTRXMSG DB 'Input matrix: $'					; Сообщение при вводе матрицы
	RESLMSG DB 'Result matrix: $'					; Сообщение при выводе матрицы
	ERROMSG DB 'Error!!! $'							; Сообщение об ошибке
	MYINC DW 0										; Переменная для ввода, вывода и смены строк в матрицы
	SWAP DB '?'										; Сколько будет смен
	ROWS DB 0										; Кол-ва строк
	COLS DB 0										; КОл-ва столбцов
	MATRIX DB 9 * 9 DUP(?)							; Память для матрицы
DATAS ENDS	

; Сегмент кода
CODES SEGMENT PARA 'CODE'	
    ASSUME CS:CODES, DS:DATAS, SS:STKS
	
; Ввода символа
INPUTSYM:
	MOV AH, 1
	INT 21h
	RET
	
; Перевод на новую строку
PRINTNEWSTR:
	MOV AH, 2
	MOV DL, 13
	INT 21h
	MOV DL, 10
	INT 21h
	RET

; Печать пробела
PRINTSPACE:
	MOV AH, 2
	MOV DL, ' '
	INT 21h
	RET
	
; Вывод символа
OUTPUTSYM:
	MOV AH, 2
	INT 21h
	RET

; Вывод сообщения
OUTPUTMSG:
	MOV AH, 9
	INT 21h
	RET


; Главные код
MAIN:
	; Помещаю адрес моего сегмента в DS
	MOV AX, DATAS
    MOV DS, AX

	; Вывод сообщения о вводе кол-ва строк
	MOV DX, OFFSET ROWSMSG
	CALL OUTPUTMSG
	
	; Ввод кол-ва строк и перемещения этого значения в нужную ячейку памяти 
	CALL INPUTSYM
	MOV ROWS, AL
	SUB ROWS, '0'
	MOV AL, ROWS
	CALL PRINTNEWSTR
	; В случае ввода 0 строк
	CMP AL, 0
	JE ERROREND
	
	; Вывод сообщения о вводе кол-ва столбцов
	MOV DX, OFFSET COLSMSG
	CALL OUTPUTMSG
	
	; Ввод кол-ва столбцов
	CALL INPUTSYM
	MOV COLS, AL
	SUB COLS, '0'
	MOV AL, COLS
	CALL PRINTNEWSTR
	; В случае ввода 0 столбцов
	CMP AL, 0
	JE ERROREND
	
	; Вывод сообщения о вводе матрицы 
	; Матрица вводится по строкам (обычное прямоугольное представление матрицы)
	MOV DX, OFFSET MTRXMSG
	CALL OUTPUTMSG
	CALL PRINTNEWSTR
	
	; Ввод матрицы с помощью 2х циклов, регистра BX, CX, SI и команд INC, SUB
	; BX - он является базовым регистром. Это единственный регистр 
	; общего назначения, который может использоваться в качестве "индекса"
	; для расширенной адресации. Также он используется при организации вычислений.
	; CX - это счетчик, используемый для управления числом повторений
	; циклов и для операций сдвига влево или вправо.
	; Регистр CX используется также при вычислениях.
	; SI - этот регистр является индексом источника данных 
	; и применяется для некоторых операций над строками. В этом случае
    ; он адресует память в паре с регистром DS.
	; INC - Увеличивает приемник (регистр или переменная) на 1. Единственное отличие
	; этой команды от ADD приемник,1 состоит в том, что флаг CF не затрагивается.
	; SUB - вычитает источник из приемника и помешает разность в приемник,
	; Приемник может быть регистром или переменной, источник - числом, регистром или 
	; переменной, но нельзя использовать переменную для приемника и источника одномременно.
	; Так же как и ADD не делает различие между числами со знаком или без знака, но флаги
	; позволяют использовать ее и для тех и для других.
	MOV MYINC, 0
	MOV BX, 0
	MOV CX, 0
	MOV CL, ROWS
	INPUT1:
		MOV CL, COLS
		INPUTROW:
			CALL INPUTSYM			; Вызов ввода символа 
			MOV MATRIX[BX], AL		; Помещение этого символа из регистра, куда он записался, в память, в НУЖНУЮ ячейку
			INC BX					; Инкрементирую индекс этой нужной ячейки
			CALL PRINTSPACE			; Вызов печати пробела
			LOOP INPUTROW			
		CALL PRINTNEWSTR			; Вызов печати новой строки
		MOV CL, ROWS				; Для верного рассчета счетчика 
		MOV SI, MYINC				; Сколько уже было сделано циклов
		SUB CX, SI					; Вычитание из всего кол-ва -- сколько уже было сделано 
		INC MYINC					; Инкрементирую кол-во сделанных циклов
		LOOP INPUT1
		
	; Сколько раз надо менять
	MOV AH, 0
    MOV AL, ROWS 
    MOV BL, 2     	; Так как делим на 2
    DIV BL			; Деление, так как мы передали байт, то AL = AX / ЧИСЛО, а остаток в регистр АН
	
	CMP AL, 0		; Сравнение частного от деления выше с 0, если частное == 0, то флаг ZF = 1
	JZ OUTPUTMATRIX ; В случае, если ZF == 1, то выполнится переход
	MOV SWAP, AL	; Помещаем в нашу спец переменную частное от деления выше
	
	; Смена строк 1-2, 3-4, 5-6, и тд
	; Смена с помощью 2х циклов, регистров CX, BX, DX, SI
	; CX - это счетчик, используемый для управления числом повторений
	; циклов и для операций сдвига влево или вправо.
	; Регистр CX используется также при вычислениях.
	; SI - этот регистр является индексом источника данных 
	; и применяется для некоторых операций над строками. В этом случае
    ; он адресует память в паре с регистром DS.
	; DX -  Он является регистром данных и применяется для некоторых
    ; операций ввода-вывода и тех операций умножения и деления над 
	; большими числами, которые используют регистровую пару DX:AX.
	; BX - он является базовым регистром. Это единственный регистр 
	; общего назначения, который может использоваться в качестве "индекса"
	; для расширенной адресации. Также он используется при организации вычислений.
	MOV MYINC, 0 
	MOV BX, 0
	MOV CX, 0
	MOV CL, SWAP
	CHANGE:
		MOV CL, COLS
		CHANGE1:
			MOV AL, MATRIX[BX]		; Берем значение из первой строки (из которых меняем)
			MOV SI, BX				; В регистр SI кладем "индекс" значения, которого взяли
			MOV DL, COLS			; В DL помещяем кол-во столбцов, для корректного смещения "индекса"
			MOV DH, 0				; Для корректного смещения "индекса"
			ADD SI, DX				; В регистр SI добавляем наше смщеение, сразу добавить не можем, надо через регистр 
			MOV DL, MATRIX[SI]		; Берем значения из второй строки 
			MOV MATRIX[SI], AL		; меняем
			MOV MATRIX[BX], DL		; меняем
			INC BX					; Инкрементируем "индекс"
			LOOP CHANGE1			
		ADD BL, COLS				; Чтобы пропустить строчку, делаем это действие, т к мы меняем 1-2 3-4...
		MOV SI, MYINC				; В SI кладу кол-во, сколько раз сделала цикл
		MOV CL, SWAP				; Кладу общее число повторений в регстр счетчик 
		SUB CX, SI					; Вычитаю из общеего - сколько сделала
		INC MYINC					; Инкрементирую кол-во сделанных циклов
		LOOP CHANGE
		
	
	
	; Вывод матрицы
	; Метка сделана специально, так как в случае ввода матрицы - строки, необходимо
	; ее сразу вывести, поэтому стоит условный переход при проверки сколько
	; будет смен строк
	OUTPUTMATRIX:
		; Вывод сообщения
		MOV DX, OFFSET RESLMSG
		CALL OUTPUTMSG
		CALL PRINTNEWSTR
		
		MOV MYINC, 0
		MOV BX, 0
		MOV CX, 0
		MOV CL, ROWS
		OUTPUT1:
			MOV CL, COLS
			OUTPUTROW:
				MOV DL, MATRIX[BX]
				CALL OUTPUTSYM
				INC BX
				CALL PRINTSPACE
				LOOP OUTPUTROW
			CALL PRINTNEWSTR
			MOV CL, ROWS
			MOV SI, MYINC
			SUB CX, SI
			INC MYINC
			LOOP OUTPUT1
		
		
	; Конец программы, завершение работы
	; Программа работает - и ХОРОШО
	MOV AH,4Ch						
    INT 21h
	
	; Принудительное заверщение в случае ввода размеров матрицы 0
	; либо строки, либо столбцов
	ERROREND:
		CALL PRINTNEWSTR
		MOV DX, OFFSET ERROMSG
		CALL OUTPUTMSG
		MOV AH,4Ch						
		INT 21h
	
CODES ENDS
END MAIN